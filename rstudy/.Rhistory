sqldf("select * from iris limit 10")
sqldf("select * from iris where species='virginica' limit 10")
sqldf("select [Sepal.Length] from iris where species='virginica' limit 10")
v = sqldf("select [Sepal.Length] from iris where species='virginica' limit 10")
v
install.packages(c("lattice", "doParallel"))
install.packages(c("lattice", "doParallel"))
install.packages(c("lattice", "doParallel"))
install.packages(c("lattice", "doParallel"))
install.packages(c("lattice"))
install.packages(c("lattice"))
install.packages(c("lattice"))
install.packages(c("doParallel"))
library(doParallel)
registerDoParallel(7)
install.packages("e1071")
library(e1071)
str(cars)
summary(cars)
max(cars$speed)
summary(mtcars)
plot(mtcars$mpg)
plot(sort(mtcars$mpg))
summary(datasets::iris)
colnames(datasets::iris)
data(iris)
iris
colnames(iris3)
head(iris, n=10)
tail(iris, n=5)
?iris
?iris3
?mtcars
?sample
install.packages("party")
library('party')
library(caret)
idx <- sample(2, nrow(iris), replace=T, prob=c(0.6, 0.4))
iris[idx]
train <- iris[idx==1,]
test  <- iris[idx==2,]
iris.train <- ctree(Species~., data=train)
plot(iris.train)
iris.pred <- predict(iris.train, newdata=test)
table (iris.pred, test$Species)
confusionMatrix(test$Species, iris.pred)
library(data.table)
df1 <- data.frame(id=c(1,2,3), age=c(20,30,40), name=c('a','b','c'))
df1
class(df1)
df2 <- data.table(df1)
class(df2)
filename = 'test.csv'
write.csv(df1, file = filename)
getwd()
df3 <- read.csv(filename)
class(df3)
df3
save.image("df3")
rm (df3)
load("df3")
df3
class(df3)
install.packages("sqldf")
library(sqldf)
sqldf("select * from iris where species='virginica' limit 10")
v = sqldf("select [Sepal.Length] from iris where species='virginica' limit 10")
library(doParallel)
registerDoParallel(7)
library(e1071)
rf1 <- train(Species~., data=train, method="rf")
library(caret)
rf1 <- train(Species~., data=train, method="rf")
library(caret)
library(caret)
install.packages("lattice")
library(caret)
rf1 <- train(Species~., data=train, method="rf")
predict(rf1, newdata=test, test$Species)
predict(rf1, newdata=test)
table(predict(rf1, newdata=test), test$Species)
table(predict(svm1, newdata=test), test$Species)
svm1 <- train(Species~., data=train, method="svm")
table(predict(svm1, newdata=test), test$Species)
svm1 <- train(Species~., data=train, method="svm")
svm1 <- train(Species~., data=train, method="svmRadial")
table(predict(svm1, newdata=test), test$Species)
confusionMatrix(predict(rf1, newdata=test), test$Species)
confusionMatrix(predict(svm1, newdata=test), test$Species)
c<-1:5
c
rep(c,2)
rep(c,each=2)
rep(c,each=2) %%2 == 0
rep(c,each=2)[rep(c,each=2) %%2 == 0]
z <- 1
z
print(z)
(z<-1)
y<-c("ECG","Eric","Tim","Joshua")
y
c(1+2,2-3,3*4,4/5)
x1<-c(0,1,1,2,3)
x2<-c(5,8,13,21,34)
(x3<-c(x1,x2))
1:5
9:0
rep(1:5)
rep(1:5, 2)
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
data("movies", package="ggplot2movies")
summary(movies)
paste("a",'b','c', sep=',')
paste("a",'b','c', sep='|')
substr("teatlkjalsfj saf", 1,5)
substr("teatlkjalsfj saf", 5,5)
substr("teatlkjalsfj saf", 5,15)
ss<-c('af','asdf',fd')
substr(ss, 1,2)
ss<-c('af','asdf','fd')
ss<-c('af','asdf','fd')
substr(ss, 1,2)
iris
iris[1:4]
as.matrix(iris[1:4])
iris.mat <- as.matrix(iris[1:4])
class(iris.mat)
iris.mat
iris.mat[1:5,]
iris.mat[,1:2]
iris.mat[,3:4]
iris.mat[1,5,3:4]
iris.mat[1:5,3:4]
rm(iris.mat)
as.matrix(iris[1:4])
iris.mat <- as.matrix(iris[1:4])
books
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
authors
books
m1 <- merge(authors, books, by.x = "surname", by.y = "name")
m1
install.packages("tabplot")
install.packages("tabplotd3")
library(tabplot)
library(tabplot)
tableplot(diamonds, cex=1.08)
tableplot(diamonds, cex=1.8)
tableplot(iris, cex=1.8)
tableplot(books, cex=1.8)
tableplot(iris, cex=1.8)
?tableplot
tableplot(iris, sortCol = 4)
tableplot(iris, sortCol = 5)
install.packages("googlePublicData")
install.packages("googleVis")
library(googleVis)
library(googleVis)
data(Fruits)
M1 <- gvisMotionChart(Fruits, idvar="Fruit", timevar = "Year")
plot(M1)
plot(M1)
install.packages("klaR")
library(klaR)
data(iris)
gw_obj <- greedy.wilks(Species~., data=iris, niveau=0.1)
gw_obj
iris2 <- iris[,c(1,3,5)]
iris2
plineplot(Species~., data=iris2, method="lda", x=iris[,4], xlab="Petal.Width")
plineplot(Species~., data=iris2, method="lda", x=iris[,4], xlab="Petal.Width")
plineplot(Species~., data=iris2, method="lda", x=iris[,4], xlab="Petal.Width")
library(party)
iris$Petal.Width
iris$Petal.Width.c <- cut(iris$Petal.Width, 5)
iris$Petal.Width.c
?cut
a<-ctree(Species~.,data=iris)
plot(a)
a<-ctree(Species~.,data=iris)
plot(a)
plot(a)
a
plot(a)
dev.off()
plot(a)
data("airquality")
airquality
colnames(airquality)
plot(summary(airquality))
summary(airquality)
boxplot(airquality)
attributes(airquality)
aqm<-melt(airquality, id=c("month","day"), na.rm=T)
aqm<-melt(airquality, id=c("Month","Day"), na.rm=T)
aqm
head(aqm)
cast(aqm, month ~ variable, mean)
library(reshape2)
cast(aqm, month ~ variable, mean)
dcast(aqm, month ~ variable, mean)
install.packages("reshape")
library(reshape)
cast(aqm, month ~ variable, mean)
?cast(aqm, month ~ variable, mean)
library(reshape)
?cast(aqm, Month ~ Variable, mean)
cast(aqm, Month ~ Variable, mean)
attributes(airquality)
aqm<-melt(airquality, id=c("Month","Day"), na.rm=T)
head(aqm)
cast(aqm, Month ~ variable, mean)
remove.packages("reshape")
tmp2 <- cast(aqm, Month ~ variable, c(var, mean, min, max))
tmp2
attribute(tmp2)
attributes(tmp2)
attributes(aqm)
install.packages(c("raster", "rasterVis"))
install.packages("rgdal")
setwd("D:\\work\\metricstudy\\rstudy")
rm(list=ls())
load("stock.rdata")
ls()
colnames(stock)
head(stock)
stock$name <- iconv(stock$name,"UTF8","CP949")
str(stock)
head(stock)
library(sqldf)
sqldf("select min(date),max(date) from stock")
sqldf("select code,name,avg(close) avg_close2013 from stock where date between '2013-01-01' and '2013-12-31' group by code,name having avg(close)>1000000")
# 종목코드,이름별로
# 2014년 7월 평균종가와 2014년 8월 고가의 최고가를 구해서,
# 두변수간의 가격변화율을 산출해라.
# code,name, month7, month8, rate
### 과제 1
###종목코드, 이름별로 2014년 7월 평균종가와 2014년 8월 고가의 최고가를 구해서, 두 변수간의 가격 변화율을 산출해라
month7_avg_close <- sqldf("select code, name, avg(close) month7 from stock where date between '2014-07-02-30' and '2014-07-31' group by code, name")
dim(month7_avg_close)
montt8_max_high <- sqldf("select code, name, max(High) month8 from stock where date between '2014-08-01' and '2014-08-31' group by code, name")
result <- sqldf("select month7_avg_close.code, month7_avg_close.name, month7, month8, (month8 / month7) rate from month7_avg_close join montt8_max_high on month7_avg_close.code = montt8_max_high.code and month7_avg_close.name = montt8_max_high.name")
head(result)
summary(result)
result$class <- 'no'
ind <- which(result$rate>1.1)
ind
length(ind)
result[ind,"class"] <- 'yes'
table(result$class)
prop.table(table(result$class))
str(result)
result$class <- factor(result$class)
str(result)
######
tmp1 <- sqldf("select code,name, avg(open) avg_open, avg(high) avg_high, avg(low) avg_low, avg(Close) avg_close, avg(volume) avg_volume,variance(open) var_open, variance(high) var_high, variance(low) var_low, variance(Close) var_close, variance(volume) var_volume from stock where date<'2014-08-01' group by code,name")
colnames(tmp1)
colnames(result)
mart <- sqldf("select a.class, b.* from result a, tmp1 b where a.code=b.code and a.name=b.name")
colnames(mart)
month7_avg_close <- sqldf("select code, name, avg(close) month7 from stock where date between '2014-07-01' and '2014-07-31' group by code, name")
dim(month7_avg_close)
montt8_max_high <- sqldf("select code, name, max(High) month8 from stock where date between '2014-08-01' and '2014-08-31' group by code, name")
result <- sqldf("select month7_avg_close.code, month7_avg_close.name, month7, month8, (month8 / month7) rate from month7_avg_close join montt8_max_high on month7_avg_close.code = montt8_max_high.code and month7_avg_close.name = montt8_max_high.name")
head(result)
summary(result)
result$class <- 'no'
ind <- which(result$rate>1.1)
ind
length(ind)
result[ind,"class"] <- 'yes'
table(result$class)
prop.table(table(result$class))
str(result)
result$class <- factor(result$class)
str(result)
######
tmp1 <- sqldf("select code,name, avg(open) avg_open, avg(high) avg_high, avg(low) avg_low, avg(Close) avg_close, avg(volume) avg_volume,variance(open) var_open, variance(high) var_high, variance(low) var_low, variance(Close) var_close, variance(volume) var_volume from stock where date<'2014-08-01' group by code,name")
colnames(tmp1)
colnames(result)
mart <- sqldf("select a.class, b.* from result a, tmp1 b where a.code=b.code and a.name=b.name")
colnames(mart)
library(rpart)
library(partykit)
rpp1 <- rpart(class~.,data=mart[,-c(2,3)])
plot(as.party(rpp1))
table(predict(rpp1,type="class"),mart$class)
final <- cbind(mart,rpp1=predict(rpp1,type="class"),rpp1prob=predict(rpp1))
colnames(final)
head(final)
sqldf("select name,rpp1,class,[rpp1prob.yes] from final where [rpp1prob.yes]>0.7")
sqldf("select class, rpp1, count(*) cnt from (select name,class,rpp1,[rpp1prob.yes] rpp1yes from final where [rpp1prob.yes]>0.7) group by class,rpp1")
final <- cbind(mart,rpp1=predict(rpp1,type="class"),rpp1prob=predict(rpp1))
colnames(final)
head(final)
sqldf("select name,rpp1,class,[rpp1prob.yes] from final where [rpp1prob.yes]>0.7")
sqldf("select class, rpp1, count(*) cnt from (select name,class,rpp1,[rpp1prob.yes] rpp1yes from final where [rpp1prob.yes]>0.7) group by class,rpp1")
sqldf("select name,rpp1,class,[rpp1prob.yes] from final where [rpp1prob.yes]>0.7")
sqldf("select name,rpp1,class,[rpp1prob.yes] from final where [rpp1prob.yes]>0.7")
sqldf("select class, rpp1, count(*) cnt from (select name,class,rpp1,[rpp1prob.yes] rpp1yes from final where [rpp1prob.yes]>0.7) group by class,rpp1")
setwd("D:\\work\\metricstudy\\rstudy")
rm(list=ls())
load("stock.rdata")
ls()
colnames(stock)
head(stock)
stock$name <- iconv(stock$name,"UTF8","CP949")
str(stock)
head(stock)
library(sqldf)
sqldf("select min(date),max(date) from stock")
sqldf("select code,name,avg(close) avg_close2013 from stock where date between '2013-01-01' and '2013-12-31' group by code,name having avg(close)>1000000")
# 종목코드,이름별로
# 2014년 7월 평균종가와 2014년 8월 고가의 최고가를 구해서,
# 두변수간의 가격변화율을 산출해라.
# code,name, month7, month8, rate
### 과제 1
###종목코드, 이름별로 2014년 7월 평균종가와 2014년 8월 고가의 최고가를 구해서, 두 변수간의 가격 변화율을 산출해라
month7_avg_close <- sqldf("select code, name, avg(close) month7 from stock where date between '2014-07-01' and '2014-07-31' group by code, name")
dim(month7_avg_close)
montt8_max_high <- sqldf("select code, name, max(High) month8 from stock where date between '2014-08-01' and '2014-08-31' group by code, name")
result <- sqldf("select month7_avg_close.code, month7_avg_close.name, month7, month8, (month8 / month7) rate from month7_avg_close join montt8_max_high on month7_avg_close.code = montt8_max_high.code and month7_avg_close.name = montt8_max_high.name")
head(result)
summary(result)
result$class <- 'no'
ind <- which(result$rate>1.1)
ind
length(ind)
result[ind,"class"] <- 'yes'
table(result$class)
prop.table(table(result$class))
str(result)
result$class <- factor(result$class)
str(result)
######
tmp1 <- sqldf("select code,name, avg(open) avg_open, avg(high) avg_high, avg(low) avg_low, avg(Close) avg_close, avg(volume) avg_volume,variance(open) var_open, variance(high) var_high, variance(low) var_low, variance(Close) var_close, variance(volume) var_volume from stock where date<'2014-08-01' group by code,name")
colnames(tmp1)
colnames(result)
mart <- sqldf("select a.class, b.* from result a, tmp1 b where a.code=b.code and a.name=b.name")
colnames(mart)
library(rpart)
library(partykit)
rpp1 <- rpart(class~.,data=mart[,-c(2,3)])
plot(as.party(rpp1))
table(predict(rpp1,type="class"),mart$class)
library(caret)
confusionMatrix(table(predict(rpp1,type="class"),mart$class))
library(dplyr)
set.seed(1234)
dat <- data.frame(x = rnorm(10, 30, .2),
y = runif(10, 3, 5),
z = runif(10, 10, 20))
dat
dat %>% mutate_each_(funs(scale),vars=c("y","z"))
library(caret)
setwd("C:/Users/satti.sec/Downloads")
load("stock.rdata")
ls()
colnames(stock)
head(stock)
stock$name <- iconv(stock$name,"UTF8","CP949")
str(stock)
head(stock)
min(stock$date);max(stock$date)
class(stock)
library(sqldf)
sqldf("select min(date),max(date) from stock")
sqldf("select code,name,avg(close) avg_close2013 from stock where date between '2013-01-01' and '2013-12-31' group by code,name having avg(close)>1000000")
# 종목코드,이름별로
# 2014년 7월 평균종가와 2014년 8월 고가의 최고가를 구해서,
# 두변수간의 가격변화율을 산출해라.
# code,name, month7, month8, rate
### 과제 1
###종목코드, 이름별로 2014년 7월 평균종가와 2014년 8월 고가의 최고가를 구해서, 두 변수간의 가격 변화율을 산출해라
month7_avg_close <- sqldf("select code, name, avg(close) month7 from stock where date between '2014-07-30' and '2014-07-31' group by code, name")
dim(month7_avg_close)
montt8_max_high <- sqldf("select code, name, max(High) month8 from stock where date between '2014-08-01' and '2014-08-31' group by code, name")
result <- sqldf("select month7_avg_close.code, month7_avg_close.name, month7, month8, (month8 / month7) rate from month7_avg_close join montt8_max_high on month7_avg_close.code = montt8_max_high.code and month7_avg_close.name = montt8_max_high.name")
head(result)
summary(result)
result$class <- 'no'
ind <- which(result$rate>1.1)
ind
length(ind)
result[ind,"class"] <- 'yes'
table(result$class)
prop.table(table(result$class))
str(result)
result$class <- factor(result$class)
str(result)
######
tmp1 <- sqldf("select code,name, avg(open) avg_open, avg(high) avg_high, avg(low) avg_low, avg(Close) avg_close, avg(volume) avg_volume,variance(open) var_open, variance(high) var_high, variance(low) var_low, variance(Close) var_close, variance(volume) var_volume from stock where date<'2014-08-01' group by code,name")
colnames(tmp1)
# tmp2 <-
# tmp3 <-
# tmp4 <- sqldf()
colnames(result)
mart <- sqldf("select a.class, b.* from result a, tmp1 b where a.code=b.code and a.name=b.name")
colnames(mart)
library(rpart)
library(partykit)
rpp1 <- rpart(class~.,data=mart[,-c(2,3)],parms=list(prior=c(0.5,0.5)),cp=0.01)
plot(as.party(rpp1))
table(predict(rpp1,type="class"),mart$class)
(503+583)/(503+583+181+512)# 61
583/(512+583) # 53 pre
583/(583+181) # 76 recall
53/42 # 1.26
final <- cbind(mart,rpp1=predict(rpp1,type="class"),rpp1prob=predict(rpp1))
colnames(final)
head(final)
sqldf("select name,rpp1,class,[rpp1prob.yes] from final where [rpp1prob.yes]>0.7")
sqldf("select class, rpp1, count(*) cnt from (select name,class,rpp1,[rpp1prob.yes] rpp1yes from final where [rpp1prob.yes]>0.7) group by class,rpp1")
43/(43+15)
74/42
library(doParallel)
registerDoParallel(7)
library(caret)
system.time(rf1 <- train(class~.,data=mart[,-c(2,3)],method="rf"))
plot(rf1)
vi <- varImp(rf1)
plot(vi)
table(predict(rf1),mart$class)
library(caret)
setwd("D:\\work\\metricstudy\\rstudy")
rm(list=ls())
load("stock.rdata")
ls()
colnames(stock)
head(stock)
stock$name <- iconv(stock$name,"UTF8","CP949")
str(stock)
head(stock)
min(stock$date);max(stock$date)
class(stock)
library(sqldf)
sqldf("select min(date),max(date) from stock")
sqldf("select code,name,avg(close) avg_close2013 from stock where date between '2013-01-01' and '2013-12-31' group by code,name having avg(close)>1000000")
# 종목코드,이름별로
# 2014년 7월 평균종가와 2014년 8월 고가의 최고가를 구해서,
# 두변수간의 가격변화율을 산출해라.
# code,name, month7, month8, rate
### 과제 1
###종목코드, 이름별로 2014년 7월 평균종가와 2014년 8월 고가의 최고가를 구해서, 두 변수간의 가격 변화율을 산출해라
month7_avg_close <- sqldf("select code, name, avg(close) month7 from stock where date between '2014-07-30' and '2014-07-31' group by code, name")
dim(month7_avg_close)
montt8_max_high <- sqldf("select code, name, max(High) month8 from stock where date between '2014-08-01' and '2014-08-31' group by code, name")
result <- sqldf("select month7_avg_close.code, month7_avg_close.name, month7, month8, (month8 / month7) rate from month7_avg_close join montt8_max_high on month7_avg_close.code = montt8_max_high.code and month7_avg_close.name = montt8_max_high.name")
head(result)
summary(result)
result$class <- 'no'
ind <- which(result$rate>1.1)
ind
length(ind)
result[ind,"class"] <- 'yes'
table(result$class)
prop.table(table(result$class))
str(result)
result$class <- factor(result$class)
str(result)
######
tmp1 <- sqldf("select code,name, avg(open) avg_open, avg(high) avg_high, avg(low) avg_low, avg(Close) avg_close, avg(volume) avg_volume,variance(open) var_open, variance(high) var_high, variance(low) var_low, variance(Close) var_close, variance(volume) var_volume from stock where date<'2014-08-01' group by code,name")
colnames(tmp1)
# tmp2 <-
# tmp3 <-
# tmp4 <- sqldf()
colnames(result)
mart <- sqldf("select a.class, b.* from result a, tmp1 b where a.code=b.code and a.name=b.name")
colnames(mart)
library(rpart)
library(partykit)
rpp1 <- rpart(class~.,data=mart[,-c(2,3)],parms=list(prior=c(0.5,0.5)),cp=0.01)
plot(as.party(rpp1))
table(predict(rpp1,type="class"),mart$class)
(503+583)/(503+583+181+512)# 61
583/(512+583) # 53 pre
583/(583+181) # 76 recall
53/42 # 1.26
final <- cbind(mart,rpp1=predict(rpp1,type="class"),rpp1prob=predict(rpp1))
colnames(final)
head(final)
sqldf("select name,rpp1,class,[rpp1prob.yes] from final where [rpp1prob.yes]>0.7")
sqldf("select class, rpp1, count(*) cnt from (select name,class,rpp1,[rpp1prob.yes] rpp1yes from final where [rpp1prob.yes]>0.7) group by class,rpp1")
43/(43+15)
74/42
library(doParallel)
registerDoParallel(7)
library(caret)
system.time(rf1 <- train(class~.,data=mart[,-c(2,3)],method="rf"))
plot(rf1)
vi <- varImp(rf1)
plot(vi)
table(predict(rf1),mart$class)
colnames(tmp1)
head(tmp1)
colnames(final)
